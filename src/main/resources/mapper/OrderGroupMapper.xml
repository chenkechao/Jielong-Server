<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jielong.core.dao.OrderGroupMapper" >
  <resultMap id="BaseResultMap" type="com.jielong.core.domain.OrderGroup" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="cust_id" property="custId" jdbcType="INTEGER" />
    <result column="jielong_id" property="jielongId" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="cust_name" property="custName" jdbcType="VARCHAR" />
    <result column="cust_phone" property="custPhone" jdbcType="VARCHAR" />
    <result column="cust_note" property="custNote" jdbcType="VARCHAR" />
    <result column="cust_buy_num" property="custBuyNum" jdbcType="INTEGER" />
    <result column="cust_buy_price" property="custBuyPrice" jdbcType="DECIMAL" />
    <result column="cust_buy_all_money" property="custBuyAllMoney" jdbcType="DECIMAL" />
    <result column="address_id" property="addressId" jdbcType="INTEGER" />
    <result column="trade_flg" property="tradeFlg" jdbcType="INTEGER" />
    <result column="order_flg" property="orderFlg" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="order_flg" property="orderFlg" jdbcType="INTEGER" />
     <result column="address_id" property="addressId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >

    id, cust_id, jielong_id, order_id, goods_id, cust_name, cust_phone, cust_note, cust_buy_num, 
    cust_buy_price, cust_buy_all_money, trade_flg, order_flg, created_at, updated_at,address_id

  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_group
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_group
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jielong.core.domain.OrderGroup" >
    insert into order_group (id, cust_id, jielong_id, 
      order_id, goods_id, cust_name, 
      cust_phone, cust_note, cust_buy_num, 
      cust_buy_price, cust_buy_all_money, trade_flg, 
      order_flg, created_at, updated_at,address_id
      )
    values (#{id,jdbcType=INTEGER}, #{custId,jdbcType=INTEGER}, #{jielongId,jdbcType=INTEGER}, 
      #{orderId,jdbcType=VARCHAR}, #{goodsId,jdbcType=INTEGER}, #{custName,jdbcType=VARCHAR}, 
      #{custPhone,jdbcType=VARCHAR}, #{custNote,jdbcType=VARCHAR}, #{custBuyNum,jdbcType=INTEGER}, 
      #{custBuyPrice,jdbcType=DECIMAL}, #{custBuyAllMoney,jdbcType=DECIMAL}, #{tradeFlg,jdbcType=INTEGER}, 
      #{orderFlg,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP},
      #{addressId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jielong.core.domain.OrderGroup" >
    insert into order_group
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="custId != null" >
        cust_id,
      </if>
      <if test="jielongId != null" >
        jielong_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="custName != null" >
        cust_name,
      </if>
      <if test="custPhone != null" >
        cust_phone,
      </if>
      <if test="custNote != null" >
        cust_note,
      </if>
      <if test="custBuyNum != null" >
        cust_buy_num,
      </if>
      <if test="custBuyPrice != null" >
        cust_buy_price,
      </if>
      <if test="custBuyAllMoney != null" >
        cust_buy_all_money,
      </if>
      <if test="tradeFlg != null" >
        trade_flg,
      </if>
      <if test="orderFlg != null" >
        order_flg,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="addressId != null" >
        address_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="custId != null" >
        #{custId,jdbcType=INTEGER},
      </if>
      <if test="jielongId != null" >
        #{jielongId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="custName != null" >
        #{custName,jdbcType=VARCHAR},
      </if>
      <if test="custPhone != null" >
        #{custPhone,jdbcType=VARCHAR},
      </if>
      <if test="custNote != null" >
        #{custNote,jdbcType=VARCHAR},
      </if>
      <if test="custBuyNum != null" >
        #{custBuyNum,jdbcType=INTEGER},
      </if>
      <if test="custBuyPrice != null" >
        #{custBuyPrice,jdbcType=DECIMAL},
      </if>
      <if test="custBuyAllMoney != null" >
        #{custBuyAllMoney,jdbcType=DECIMAL},
      </if>
      <if test="tradeFlg != null" >
        #{tradeFlg,jdbcType=INTEGER},
      </if>
      <if test="orderFlg != null" >
        #{orderFlg,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="addressId != null" >
        #{addressId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jielong.core.domain.OrderGroup" >
    update order_group
    <set >
      <if test="custId != null" >
        cust_id = #{custId,jdbcType=INTEGER},
      </if>
      <if test="jielongId != null" >
        jielong_id = #{jielongId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="custName != null" >
        cust_name = #{custName,jdbcType=VARCHAR},
      </if>
      <if test="custPhone != null" >
        cust_phone = #{custPhone,jdbcType=VARCHAR},
      </if>
      <if test="custNote != null" >
        cust_note = #{custNote,jdbcType=VARCHAR},
      </if>
      <if test="custBuyNum != null" >
        cust_buy_num = #{custBuyNum,jdbcType=INTEGER},
      </if>
      <if test="custBuyPrice != null" >
        cust_buy_price = #{custBuyPrice,jdbcType=DECIMAL},
      </if>
      <if test="custBuyAllMoney != null" >
        cust_buy_all_money = #{custBuyAllMoney,jdbcType=DECIMAL},
      </if>
      <if test="tradeFlg != null" >
        trade_flg = #{tradeFlg,jdbcType=INTEGER},
      </if>
      <if test="orderFlg != null" >
        order_flg = #{orderFlg,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="addressId != null" >
        address_id = #{addressId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jielong.core.domain.OrderGroup" >
    update order_group
    set cust_id = #{custId,jdbcType=INTEGER},
      jielong_id = #{jielongId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=VARCHAR},
      goods_id = #{goodsId,jdbcType=INTEGER},
      cust_name = #{custName,jdbcType=VARCHAR},
      cust_phone = #{custPhone,jdbcType=VARCHAR},
      cust_note = #{custNote,jdbcType=VARCHAR},
      cust_buy_num = #{custBuyNum,jdbcType=INTEGER},
      cust_buy_price = #{custBuyPrice,jdbcType=DECIMAL},
      cust_buy_all_money = #{custBuyAllMoney,jdbcType=DECIMAL},
      trade_flg = #{tradeFlg,jdbcType=INTEGER},
      order_flg = #{orderFlg,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      address_id = #{addressId,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}

  </update>
</mapper>